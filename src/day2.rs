fn main()
{
    part_two()
}

fn part_one()
{
    let input = "1,12,2,3,1,1,2,3,1,3,4,3,1,5,0,3,2,1,6,19,1,5,19,23,1,23,6,27,1,5,27,31,1,31,6,35,1,9,35,39,2,10,39,43,1,43,6,47,2,6,47,51,1,5,51,55,1,55,13,59,1,59,10,63,2,10,63,67,1,9,67,71,2,6,71,75,1,5,75,79,2,79,13,83,1,83,5,87,1,87,9,91,1,5,91,95,1,5,95,99,1,99,13,103,1,10,103,107,1,107,9,111,1,6,111,115,2,115,13,119,1,10,119,123,2,123,6,127,1,5,127,131,1,5,131,135,1,135,6,139,2,139,10,143,2,143,9,147,1,147,6,151,1,151,13,155,2,155,9,159,1,6,159,163,1,5,163,167,1,5,167,171,1,10,171,175,1,13,175,179,1,179,2,183,1,9,183,0,99,2,14,0,0".to_string();
    //let input = String::from("1,9,10,3,2,3,11,0,99,30,40,50");

    let mut vals: Vec<i32> = input.split(",").map(|s| s.parse().unwrap()).collect();
    for x in 0..192
    {
        for y in 0..192
        {
            
        }
    }
    for i in (0..vals.len()).step_by(4) {
        println!("{}: {}", i, vals[i]);
        if vals[i] == 99 { break; }
        let val = vals[i];
        let a = vals[i+1] as usize;
        let b = vals[i+2] as usize;
        let c = vals[i+3] as usize;
        if c == 0 {
            println!("{}", i)
        };
        if      val == 1  { vals[c] = vals[a] + vals[b]; }
        else if val == 2  { vals[c] = vals[a] * vals[b]; }
    }
    println!("***");
    for i in 0..vals.len() {
        println!("{}: {}", i, vals[i]);
    }
}

fn part_two()
{
    let input = "1,12,2,3,1,1,2,3,1,3,4,3,1,5,0,3,2,1,6,19,1,5,19,23,1,23,6,27,1,5,27,31,1,31,6,35,1,9,35,39,2,10,39,43,1,43,6,47,2,6,47,51,1,5,51,55,1,55,13,59,1,59,10,63,2,10,63,67,1,9,67,71,2,6,71,75,1,5,75,79,2,79,13,83,1,83,5,87,1,87,9,91,1,5,91,95,1,5,95,99,1,99,13,103,1,10,103,107,1,107,9,111,1,6,111,115,2,115,13,119,1,10,119,123,2,123,6,127,1,5,127,131,1,5,131,135,1,135,6,139,2,139,10,143,2,143,9,147,1,147,6,151,1,151,13,155,2,155,9,159,1,6,159,163,1,5,163,167,1,5,167,171,1,10,171,175,1,13,175,179,1,179,2,183,1,9,183,0,99,2,14,0,0".to_string();
    //let input = String::from("1,9,10,3,2,3,11,0,99,30,40,50");

    for x in 0..193
    {
        for y in 0..193
        {
            let mut vals: Vec<i32> = input.split(",").map(|s| s.parse().unwrap()).collect();
            vals[1] = x;
            vals[2] = y;

            for i in (0..vals.len()).step_by(4) {
                //println!("{}: {}", i, vals[i]);
                if vals[i] == 99 { break; }
                let val = vals[i];
                let a = vals[i+1] as usize;
                let b = vals[i+2] as usize;
                let c = vals[i+3] as usize;
                if      val == 1  { vals[c] = vals[a] + vals[b]; }
                else if val == 2  { vals[c] = vals[a] * vals[b]; }
            }
            println!("***");
            println!("{},{}: {}", x, y, vals[0]);
            if vals[0] == 19690720
            {
                println!(")(*&*^$^%$%^&%(*^&*(");
                ::std::process::exit(1);
            }
//            for i in 0..vals.len() {
//                println!("{}: {}", i, vals[i]);
//            }
        }
    }
    
}
